{"version":3,"sources":["component/layout/SignedInLinks.js","store/actions/authActions.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetail.js","component/auth/SignIn.js","component/auth/SignUp.js","component/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credentials","getstate","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","nChange","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28855b0a.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nfunction SignedInLinks(props) {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighthen-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getstate, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({\n          type: \"LOGIN_SUCCESS\"\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: \"LOGIN_ERROR\",\n          err\n        });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction SignedOutLinks() {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n}\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nfunction Navbar(props) {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Marioplan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>{project.content}</p>\n        <p>\n          Posted by: {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetail = props => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (project) {\n    return (\n      <div className=\"container section project-detail\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action gret lighten-4 grey-text\">\n            <div>\n              Posted By {project.authorFirstName} {project.authorLastName}{\" \"}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading Project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetail);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      // Id of the input\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapSatetToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: cred => dispatch(signIn(cred))\n  };\n};\n\nexport default connect(\n  mapSatetToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      // Id of the input\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapSatetToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapSatetToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      // Id of the input\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Content</label>\n            <textarea\n              className=\"materialize-textarea\"\n              id=\"content\"\n              nChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">\n              Create Project\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./component/layout/Navbar\";\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport ProjectDetail from \"./component/projects/ProjectDetail\";\nimport SignIn from \"./component/auth/SignIn\";\nimport SignUp from \"./component/auth/SignUp\";\nimport CreateProject from \"./component/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetail} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      return {\n        ...state,\n        authError: \"Login Failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login Success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"Dummy content\", content: \"Example of redux.\" },\n    { id: \"2\", title: \"Dummy content\", content: \"Example of redux.\" },\n    { id: \"3\", title: \"Dummy content\", content: \"Example of redux.\" }\n  ]\n};\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"Create project\");\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"Create project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC9eKdTjxSBDz3Gzy8D-ODfhp4V-NBJf7o\",\n  authDomain: \"marioplan-9cfe8.firebaseapp.com\",\n  databaseURL: \"https://marioplan-9cfe8.firebaseio.com\",\n  projectId: \"marioplan-9cfe8\",\n  storageBucket: \"\",\n  messagingSenderId: \"212289116130\",\n  appId: \"1:212289116130:web:27f64a4da27f3310\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}